name: Java Code Analysis

inputs:
  sonar-token:
    description: 'Sonar Token to access sonarqube server (Required). Use SONAR_TOKEN organizational secret'
    required: true
  project-key:
    description: 'Project key identifier. Default is repository_name. Only pass a value if project is monorepo to identify projects (usually if written in different language)'
    required: false
  project-name:
    description: 'Project name identifier. Default is repository_name. Only pass a value if project is monorepo to identify projects'
    required: false
  build:
    description: 'maven or gradle'
    type: string
    required: true
  verbose:
    description: 'Set to true to debug sonar scan logs/errors'
    type: boolean
    required: false
  disable-quality-gate:
    description: 'Set to true to pass Github Action despite Quality Gate Failure (not recommended)'
    type: boolean
    required: false
  settings:
    description: 'Maven settings.xml file full path (eg: path/name.xml)'
    type: string
    required: false
  working-directory:
    description: 'Set working directory if not in project root dir. Composite actions runs in root instead of current working directory'
    type: string
    required: false
  install-scanner-jdk:
    description: 'Set to true if jdk version is 8 or lower'
    type: boolean
    required: false

runs:
  using: composite

  steps:
    - name: Cache SonarQube packages
      if: github.actor != 'dependabot[bot]'
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Setup JDK 11
      if: github.actor != 'dependabot[bot]' && inputs.install-scanner-jdk == 'true'
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: temurin

    - name: SonarQube Scan 🔍
      if: github.actor != 'dependabot[bot]' && inputs.build == 'gradle'
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: wrapper
        arguments: |
            sonar
            -Dsonar.gradle.skipCompile=true
            -Dsonar.token=${{ inputs.sonar-token }}
            -Dsonar.host.url=$SONAR_HOST
            -Dsonar.projectKey=${{ inputs.project-key || format('{0}',github.event.repository.name) }}
            -Dsonar.projectName=${{ inputs.project-name || github.event.repository.name }}
        build-root-directory: ${{ inputs.working-directory || '.' }}

    - name: SonarQube Scan 🔍
      if: github.actor != 'dependabot[bot]' && inputs.build == 'maven'
      env:
        SETTINGS: ${{ inputs.settings }}
      shell: bash
      run: >
        mvn sonar:sonar ${SETTINGS:+-s $SETTINGS} \
          -Dsonar.token=${{ inputs.sonar-token }} \
          -Dsonar.host.url=$SONAR_HOST \
          -Dsonar.projectKey=${{ inputs.project-key || format('{0}',github.event.repository.name) }} \
          -Dsonar.projectName=${{ inputs.project-name || github.event.repository.name }}
      working-directory: ${{ inputs.working-directory || '.' }}

    - name: Get Sonar Scan Report Path
      id: report
      if: github.actor != 'dependabot[bot]' && inputs.disable-quality-gate != 'true'
      shell: bash
      run: echo path=$(find $(pwd -P) -name report-task.txt) >> $GITHUB_OUTPUT

    # Check the Quality Gate status.
    - name: SonarQube Quality Gate Check 🚦
      uses: sonarsource/sonarqube-quality-gate-action@master
      if:  github.actor != 'dependabot[bot]' && github.event_name == 'pull_request' && inputs.disable-quality-gate != 'true' && !contains(fromJSON('["master", "main", "develop"]'), github.head_ref)
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        SONAR_HOST_URL: $SONAR_HOST
      with:
        scanMetadataReportFile: ${{ steps.report.outputs.path }}
